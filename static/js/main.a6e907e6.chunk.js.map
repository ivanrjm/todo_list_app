{"version":3,"sources":["componentes/Header.js","componentes/FormularioTareas.js","componentes/Tarea.js","componentes/ListaTareas.js","App.js","index.js"],"names":["Header","mostrarCompletadas","cambiarMostrarCompletadas","toggleCompletadas","className","onClick","icon","faEyeSlash","faEye","FormularioTareas","tareas","cambiarTareas","useState","inputTarea","cambiarInputTarea","action","onSubmit","e","preventDefault","id","uuidv4","texto","completada","type","placeholder","value","onChange","target","handleInput","faPlusSquare","Tarea","tarea","toggleCompletada","editarTarea","borrarTarea","editandoTarea","cambiarEditandoTarea","nuevaTarea","cambiarNuevaTarea","faCheckSquare","faSquare","faEdit","faTimes","ListaTareas","map","nuevoTexto","filter","length","App","tareasGuardadas","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","configMostrarCompletadas","toString","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6e907e6.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\n\nconst Header = ({mostrarCompletadas, cambiarMostrarCompletadas}) => {\n\n    const toggleCompletadas = () => {\n        cambiarMostrarCompletadas(!mostrarCompletadas);\n    }\n\n    return ( \n        <header className=\"header\">\n            <h1 className=\"header__titulo\">Lista de tareas</h1>\n            {mostrarCompletadas ?\n                <button\n                    className=\"header__boton\"\n                    onClick={() => toggleCompletadas()}\n                >\n                    No mostrar completadas\n                    <FontAwesomeIcon icon={faEyeSlash} className=\"header__icono-boton\"/>\n                </button>\n                :\n                <button\n                    className=\"header__boton\"\n                    onClick={() => toggleCompletadas()}\n                >\n                    Mostrar completadas\n                    <FontAwesomeIcon icon={faEye} className=\"header__icono-boton\"/>\n                </button>\n            }\n        </header>\n     );\n}\n \nexport default Header;","import React, {useState} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\n\nconst FormularioTareas = ({tareas, cambiarTareas}) => {\n\n    const [inputTarea, cambiarInputTarea] = useState('');\n\n    const handleInput = (e) => {\n        cambiarInputTarea(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        cambiarTareas(\n            [\n                ...tareas,\n                {\n                    id: uuidv4(),\n                    texto: inputTarea,\n                    completada: false\n                }\n            ]\n        );\n        cambiarInputTarea('');\n    }\n\n    return ( \n        <form action=\"\" className=\"formulario-tareas\" onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                className=\"formulario-tareas__input\"\n                placeholder=\"Escribe una tarea\"\n                value={inputTarea}\n                onChange={(e) => handleInput(e)}\n            />\n            <button\n                type=\"submit\"\n                className=\"formulario-tareas__btn\"\n            >\n                <FontAwesomeIcon\n                    icon={faPlusSquare}\n                    className=\"formulario-tareas__icono-btn\"\n                \n                />\n            </button>\n        </form>\n     );\n}\n \nexport default FormularioTareas;","import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckSquare, faEdit, faSquare, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst Tarea = ({tarea, toggleCompletada, editarTarea, borrarTarea}) => {\n    const [editandoTarea, cambiarEditandoTarea] = useState(false);\n    const [nuevaTarea, cambiarNuevaTarea] = useState(tarea.texto);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        editarTarea(tarea.id, nuevaTarea);\n        cambiarEditandoTarea(false);\n    }\n\n    return (\n        <li className=\"lista-tareas__tarea\" key={tarea.id}>\n            <FontAwesomeIcon\n                icon={tarea.completada ? faCheckSquare : faSquare}\n                className=\"lista-tareas__icono lista-tareas__icono-check\"\n                onClick={() => toggleCompletada(tarea.id)}\n\n            />\n            <div className=\"lista-tareas__texto\">\n                {editandoTarea ?\n                    <form action=\"\" className=\"formulario-editar-tarea\" onSubmit={handleSubmit}>\n                        <input\n                            type=\"text\"\n                            className=\"formulario-editar-tarea__input\"\n                            value={nuevaTarea}\n                            onChange={(e) => cambiarNuevaTarea(e.target.value)}\n                        />\n                        <button\n                            type=\"submit\"\n                            className=\"formulario-editar-tarea__btn\">\n                            Actualizar\n                        </button>\n                    </form>\n                    : tarea.texto\n                }\n            </div>\n            <div className=\"lista-tareas__contenedor-botones\">\n                <FontAwesomeIcon\n                    icon={faEdit}\n                    className=\"lista-tareas__icono lista-tareas__icono-accion\"\n                    onClick={() => cambiarEditandoTarea(!editandoTarea)}\n                />\n                <FontAwesomeIcon\n                    icon={faTimes}\n                    className=\"lista-tareas__icono lista-tareas__icono-accion\"\n                    onClick={() => borrarTarea(tarea.id)}\n                />\n            </div>\n        </li>\n    );\n}\n \nexport default Tarea;","import React from 'react';\nimport Tarea from './Tarea';\n\nconst ListaTareas = ({tareas, cambiarTareas, mostrarCompletadas}) => {\n\n    const toggleCompletada = (id) => {\n        cambiarTareas(tareas.map((tarea) => {\n            if(tarea.id === id){\n                return {...tarea, completada:!tarea.completada}\n            } \n            return tarea;\n        }));\n    }\n\n    const editarTarea = (id, nuevoTexto) => {\n        cambiarTareas(tareas.map((tarea) => {\n            if(tarea.id === id){\n                return {...tarea, texto: nuevoTexto}\n            } \n            return tarea;\n        }));\n    }\n\n    const borrarTarea = (id) => {\n        cambiarTareas(tareas.filter((tarea) => {\n            if(tarea.id !== id){\n                return tarea\n            } \n            return;\n        }));\n    }\n\n    return (\n        <ul className=\"lista-tareas\">\n            {tareas.length > 0 ? tareas.map((tarea) => {\n                if(mostrarCompletadas){\n                    return <Tarea\n                            key={tarea.id}\n                            tarea={tarea}\n                            toggleCompletada={toggleCompletada}\n                            editarTarea={editarTarea}\n                            borrarTarea={borrarTarea}\n                        />\n                } else if(!tarea.completada) {\n                    return <Tarea\n                            key={tarea.id}\n                            tarea={tarea}\n                            toggleCompletada={toggleCompletada}\n                            editarTarea={editarTarea}\n                            borrarTarea={borrarTarea}\n                        />\n                }\n                return;\n            })\n            : <div className=\"lista-tareas__mensaje\">No hay tareas agregadas</div>}\n        </ul>\n    );\n}\n \nexport default ListaTareas;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Header from './componentes/Header';\nimport FormularioTareas from './componentes/FormularioTareas';\nimport ListaTareas from './componentes/ListaTareas';\n\nconst App = () => {\n  \n  //Obtener las tareas guardadas de local storage\n  const tareasGuardadas = localStorage.getItem('tareas') ? JSON.parse(localStorage.getItem('tareas')) : [];\n  \n  //Establecemos el estado de las tareas\n  const [tareas, cambiarTareas] = useState(tareasGuardadas);\n\n  //Guardando el estado dentro de local storage\n  useEffect(() => {\n    localStorage.setItem('tareas', JSON.stringify(tareas));\n  }, [tareas]);\n\n  //Acceder a localstorage para comprobar si mostrarCompletadas es null\n  let configMostrarCompletadas = localStorage.getItem('mostrarCompletadas') ? JSON.parse(localStorage.getItem('mostrarCompletadas')) : true;\n\n  //Establecemos el estado de tareas completadas\n  const [mostrarCompletadas, cambiarMostrarCompletadas] = useState(configMostrarCompletadas);\n  \n  useEffect(() => {\n    localStorage.setItem('mostrarCompletadas', mostrarCompletadas.toString());\n  }, [mostrarCompletadas]);\n\n  console.log(tareas);\n  return (\n    <div className=\"contenedor\">\n      <Header\n        mostrarCompletadas={mostrarCompletadas}\n        cambiarMostrarCompletadas={cambiarMostrarCompletadas}\n      />\n      <FormularioTareas tareas={tareas} cambiarTareas={cambiarTareas}/>\n      <ListaTareas\n        tareas={tareas}\n        cambiarTareas={cambiarTareas}\n        mostrarCompletadas={mostrarCompletadas}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}